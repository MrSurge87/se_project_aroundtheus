!function(){"use strict";class e{constructor(e,t,s){let{handleImageClick:i,handleDeleteClick:r,handleCardLike:n}=s;this._name=e.name,this._link=e.link,this.isLiked=e.isLiked,this.id=e._id,this._cardSelector=t,this._handleImageClick=i,this._handleDeleteClick=r,this._handleCardLike=n}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>this._handleCardLike(this))),this._cardElement.querySelector(".card__button-delete").addEventListener("click",(()=>this._handleDeleteClick(this)))}setLikeStatus(e){this.isLiked=e,this._renderLikes()}_renderLikes(){this.isLiked?this._cardElement.querySelector(".card__like-button").classList.add("card__like-button_active"):this._cardElement.querySelector(".card__like-button").classList.remove("card__like-button_active")}removeCard(){this._cardElement.remove()}getCard(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardImage.style.backgroundImage=`url(${this._link})`,this._cardElement.querySelector(".card__title").textContent=this._name,this._cardImage.addEventListener("click",this._handleImageClick),this._setEventListeners(),this._renderLikes(),this._cardElement}getId(){return this.id}}class t{constructor(e){this._popupElement=document.querySelector(e),this._popupClose=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._closeModalEscape)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._closeModalEscape)}_closeModalEscape=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}class s extends t{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._popupSubmit=this._popupElement.querySelector(".modal__button")}_getInputValues(){const e=this._popupForm.querySelectorAll(".modal__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setSubmitText(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._popupSubmit.textContent=e?t:"Save"}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(()=>{this._handleFormSubmit(this._getInputValues())}))}close(){this._popupForm.reset(),super.close()}}var i=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}toggleButtonState(){if(this._hasInvalidInput(this._inputEls))return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputEls=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState(this._inputEls)}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};const r=document.querySelector("#profile-edit-modal"),n=document.querySelector("#profile-edit-button"),o=document.querySelector(".profile__add-button"),a=document.querySelector(".profile__image-button"),l=document.querySelector("#profile__image-edit"),c=document.querySelector(".profile__image"),d=r.querySelector(".modal__form"),h=document.querySelector("#modal-input-name"),u=document.querySelector("#modal-input-description"),_=document.querySelector("#add-new-card"),m={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},p=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s,this._authorization=s.authorization,this._contentType=s["Content-Type"]}_checkResponseOk(e){if(e.ok)return e.json();Promise.reject(`Erorr: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponseOk)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponseOk)}profileUpdate(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",body:JSON.stringify({name:e.title,about:e.about}),headers:this._headers}).then(this._checkResponseOk)}addCard(e,t){return fetch(`${this._baseUrl}/cards`,{method:"POST",body:JSON.stringify({name:e,link:t}),headers:this._headers}).then(this._checkResponseOk)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponseOk)}cardLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponseOk)}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponseOk)}updateProfileAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponseOk)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"5f2b588a-250e-4922-b74a-306ecb82bfe6","Content-Type":"application/json"}}),v=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){console.log("CARDS",e),e.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}({renderer:S},".cards__list");function S(t){const s=new e(i=t,"#card-template",{handleImageClick:()=>E.open(i),handleDeleteClick:k,handleCardLike:q}).getCard();var i;v.addItem(s)}const E=new class extends t{constructor(e){super(e),this._image=this._popupElement.querySelector(".modal__image-preview"),this._caption=document.querySelector(".modal__image-preview-title")}open(e){super.open(),this._image.src=e.link,this._image.alt=`Photo of ${e.name}`,this._caption.textContent=e.name}}("#preview-image-modal");E.setEventListeners();const b=new class extends t{constructor(e){super(e),this._popupConfirm=this._popupElement.querySelector(".modal__form"),this._popupSubmit=this._popupElement.querySelector(".modal__button-delete")}setSubmitAction(e){this._handleFormSubmit=e}setSubmitText(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._popupSubmit.textContent=e?t:"Yes"}setEventListeners(){this._popupConfirm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()})),super.setEventListeners()}}("#card__delete-modal");function k(e){b.open(),b.setSubmitAction((()=>{b.setSubmitText(!0,"Deleting..."),p.deleteCard(e.id).then((()=>{b.close(),e.removeCard()})).catch((e=>console.log(e))).finally((()=>b.setSubmitText(!1)))}))}b.setEventListeners();const f=new s("#add-new-card",(function(e){const t=e.name,s=e.url;f.setSubmitText(!0,"Saving..."),p.addCard(t,s).then((e=>{S(e),f.setSubmitText(!1),f.close()})).catch((e=>{console.log(e)}))})),L=new s("#profile-edit-modal",(function(e){L.setSubmitText(!0,"Saving..."),p.profileUpdate(e).then((()=>{x.setUserInfo(e),L.setSubmitText(!1),L.close()})).catch((e=>{console.log(e)}))})),g=new s("#profile__image-edit",(function(e){const t=e.url;g.setSubmitText(!0,"Loading..."),p.updateProfileAvatar(t).then((()=>{c.src=t,g.close()})).catch((e=>{console.log(e)})).finally((()=>g.setSubmitText(!1)))}));L.setEventListeners(),g.setEventListeners(),f.setEventListeners();const y=new i(m,d),C=new i(m,l),I=new i(m,_);function q(e){e.isLiked?p.removeLike(e.getId()).then((t=>{e.setLikeStatus(t.isLiked)})).catch((e=>{console.log(e)})):p.cardLike(e.getId()).then((t=>{e.setLikeStatus(t.isLiked)})).catch((e=>{console.log(e)}))}y.enableValidation(),C.enableValidation(),I.enableValidation();const x=new class{constructor(e,t,s){this._name=document.querySelector(e),this._title=document.querySelector(t),this._userAvatar=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,title:this._title.textContent}}setUserInfo(e){this._name.textContent=e.title,this._title.textContent=e.about,e.avatar&&(this._userAvatar.src=e.avatar)}}(".profile__title",".profile__description",".profile__image");n.addEventListener("click",(()=>{const e=x.getUserInfo();h.value=e.name,u.value=e.title,L.open()})),o.addEventListener("click",(()=>{I.toggleButtonState(),f.open()})),a.addEventListener("click",(()=>{g.open()})),Promise.all([p.getUserInfo(),p.getInitialCards()]).then((e=>{let[t,s]=e;x.setUserInfo({about:t.about,title:t.name,avatar:t.avatar}),v.renderItems(s)})).catch((e=>{console.log(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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dEksRUFBSzRJLFNBQVF0SSxLQUFLaUwsWUFBWXpCLElBQU05SixFQUFLNEksT0FFL0MsR0xtSkEsa0JBQ0Esd0JBQ0EsbUJBSUZ6QyxFQUFrQjlFLGlCQUFpQixTQUFTLEtBQzFDLE1BQU1tSyxFQUFjWixFQUFTN0MsY0FDN0J0QixFQUFpQjVDLE1BQVEySCxFQUFZaEwsS0FDckNrRyxFQUF3QjdDLE1BQVEySCxFQUFZbkQsTUFDNUNzQyxFQUFZbEksTUFBTSxJQUdwQjJELEVBQWlCL0UsaUJBQWlCLFNBQVMsS0FDekM2SixFQUFxQnRGLG9CQUNyQjZFLEVBQWVoSSxNQUFNLElBR3ZCNEQsRUFBaUJoRixpQkFBaUIsU0FBUyxLQUN6Q3lKLEVBQWVySSxNQUFNLElBSXZCZ0YsUUFBUWdFLElBQUksQ0FBQzVFLEVBQUlrQixjQUFlbEIsRUFBSWUsb0JBQ2pDRSxNQUFLNUgsSUFBbUIsSUFBakJGLEVBQU0wTCxHQUFNeEwsRUFDbEIwSyxFQUFTQyxZQUFZLENBQ25CdkMsTUFBT3RJLEVBQUtzSSxNQUNaRCxNQUFPckksRUFBS1EsS0FDWm9JLE9BQVE1SSxFQUFLNEksU0FFZkMsRUFBWUssWUFBWXdDLEVBQU0sSUFFL0JwQixPQUFPQyxJQUNObkIsUUFBUUMsSUFBSWtCLEVBQUksRyIsInNvdXJjZXMiOlsid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoZGF0YSwgY2FyZFNlbGVjdG9yLCB7IGhhbmRsZUltYWdlQ2xpY2ssIGhhbmRsZURlbGV0ZUNsaWNrLCBoYW5kbGVDYXJkTGlrZSB9KSB7XHJcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xyXG4gICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcclxuICAgIHRoaXMuaXNMaWtlZCA9IGRhdGEuaXNMaWtlZDtcclxuICAgIHRoaXMuaWQgPSBkYXRhLl9pZDtcclxuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcclxuICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sgPSBoYW5kbGVJbWFnZUNsaWNrO1xyXG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2sgPSBoYW5kbGVEZWxldGVDbGljaztcclxuICAgIHRoaXMuX2hhbmRsZUNhcmRMaWtlID0gaGFuZGxlQ2FyZExpa2U7XHJcbiAgfVxyXG5cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAvL1wiLmNhcmRfX2xpa2UtYnV0dG9uXCJcclxuICAgICB0aGlzLl9jYXJkRWxlbWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHRoaXMuX2hhbmRsZUNhcmRMaWtlKHRoaXMpKTsgICAgXHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19idXR0b24tZGVsZXRlXCIpXHJcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2sodGhpcykpO1xyXG4gIH1cclxuXHJcbiAgLy8gX2hhbmRsZUxpa2VJY29uKCkge1xyXG4gIC8vICAgdGhpcy5fY2FyZEVsZW1lbnRcclxuICAvLyAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZS1idXR0b25cIilcclxuICAvLyAgICAgLmNsYXNzTGlzdC50b2dnbGUoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XHJcbiAgLy8gfVxyXG5cclxuICBzZXRMaWtlU3RhdHVzKGlzTGlrZWQpIHtcclxuICAgIHRoaXMuaXNMaWtlZCA9IGlzTGlrZWQ7XHJcbiAgICB0aGlzLl9yZW5kZXJMaWtlcygpO1xyXG4gIH1cclxuXHJcbiAgX3JlbmRlckxpa2VzKCl7XHJcbiAgICBpZih0aGlzLmlzTGlrZWQpIHtcclxuICAgICAgdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKS5jbGFzc0xpc3QuYWRkKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKS5jbGFzc0xpc3QucmVtb3ZlKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmVtb3ZlQ2FyZCgpIHtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50LnJlbW92ZSgpO1xyXG4gIH1cclxuXHJcbiAgZ2V0Q2FyZCgpIHtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gZG9jdW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxyXG4gICAgICAuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRcIilcclxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcclxuICAgIC8vZ2V0IHRoZSBjYXJkIHZpZXdcclxuICAgIHRoaXMuX2NhcmRJbWFnZSA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2Uuc3R5bGUuYmFja2dyb3VuZEltYWdlID0gYHVybCgke3RoaXMuX2xpbmt9KWA7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RpdGxlXCIpLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcclxuICAgIC8vc2V0IGV2ZW50IGxpc3RlbmVyc1xyXG4gICAgdGhpcy5fY2FyZEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrKTtcclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLl9yZW5kZXJMaWtlcygpO1xyXG4gICAgLy8gcmV0dXJuIHRoZSBjYXJkXHJcbiAgICByZXR1cm4gdGhpcy5fY2FyZEVsZW1lbnQ7XHJcbiAgfVxyXG5cclxuICBnZXRJZCgpIHtcclxuICAgIHJldHVybiB0aGlzLmlkO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX3BvcHVwQ2xvc2UgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2VcIik7XHJcbiAgfVxyXG5cclxuICBvcGVuKCkge1xyXG4gICAgLy9vcGVucyBwb3B1cFxyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9jbG9zZU1vZGFsRXNjYXBlKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgLy9jbG9zZXMgcG9wdXBcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWxfb3BlbmVkXCIpO1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5fY2xvc2VNb2RhbEVzY2FwZSk7XHJcbiAgfVxyXG5cclxuICBfY2xvc2VNb2RhbEVzY2FwZSA9IChldnQpID0+IHtcclxuICAgIC8vbGlzdGVucyBmb3IgZXNjIGJ1dHRvblxyXG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgLy9zZXRzIGV2ZW50IGxpc3RlbmVyc1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGlmIChcclxuICAgICAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcIm1vZGFsXCIpIHx8XHJcbiAgICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJtb2RhbF9fY2xvc2VcIilcclxuICAgICAgKSB7XHJcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XHJcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcclxuICAgIHRoaXMuX3BvcHVwU3VibWl0ID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2J1dHRvblwiKTtcclxuICB9XHJcblxyXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcclxuICAgIGNvbnN0IGlucHV0TGlzdCA9IHRoaXMuX3BvcHVwRm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLm1vZGFsX19pbnB1dFwiKTtcclxuICAgIGNvbnN0IGRhdGEgPSB7fTtcclxuICAgIGlucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICBkYXRhW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBkYXRhO1xyXG4gIH1cclxuXHJcbiAgc2V0U3VibWl0VGV4dChzdWJtaXQsIHN1Ym1pdFRleHQgPSBcIlNhdmluZy4uLlwiKXtcclxuICAgIGlmIChzdWJtaXQpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cFN1Ym1pdC50ZXh0Q29udGVudCA9IHN1Ym1pdFRleHQ7XHJcbiAgICB9IFxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBTdWJtaXQudGV4dENvbnRlbnQgPSBcIlNhdmVcIjtcclxuICAgIH1cclxufVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLl9wb3B1cEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fcG9wdXBGb3JtLnJlc2V0KCk7XHJcbiAgICBzdXBlci5jbG9zZSgpO1xyXG4gIH1cclxufVxyXG4iLCJjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICBjb25zdHJ1Y3Rvcihjb25maWcsIGZvcm1FbGVtZW50KSB7XHJcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gY29uZmlnLmlucHV0U2VsZWN0b3I7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IGNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcclxuICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSBjb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IGNvbmZpZy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gY29uZmlnLmVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xyXG4gIH1cclxuXHJcbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xyXG4gICAgY29uc3QgZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmBcclxuICAgICk7XHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG5cclxuICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlO1xyXG4gICAgZXJyb3JNZXNzYWdlRWwuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcclxuICB9XHJcblxyXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgIGNvbnN0IGVycm9yTWVzc2FnZUVsID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXHJcbiAgICApO1xyXG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gXCJcIjtcclxuICAgIGVycm9yTWVzc2FnZUVsLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgfVxyXG5cclxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCkge1xyXG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICB9XHJcbiAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xyXG4gIH1cclxuXHJcbiAgX2hhc0ludmFsaWRJbnB1dChpbnB1dExpc3QpIHtcclxuICAgIHJldHVybiAhaW5wdXRMaXN0LmV2ZXJ5KChpbnB1dEVsZW1lbnQpID0+IGlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCk7XHJcbiAgfVxyXG5cclxuICB0b2dnbGVCdXR0b25TdGF0ZSgpIHtcclxuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQodGhpcy5faW5wdXRFbHMpKSB7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5faW5wdXRFbHMgPSBbXHJcbiAgICAgIC4uLnRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvciksXHJcbiAgICBdO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3JcclxuICAgICk7XHJcbiAgICB0aGlzLl9pbnB1dEVscy5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XHJcbiAgICAgICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSh0aGlzLl9pbnB1dEVscyk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEZvcm1WYWxpZGF0b3I7XHJcbiIsIi8vSU5JVElBTCBDQVJEU1xyXG5jb25zdCBpbml0aWFsQ2FyZHMgPSBbXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6IFwiWW9zZW1pdCBWYWxsZXlcIixcclxuICAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3lvc2VtaXRlLmpwZ1wiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJMYWtlIExvdWlzZVwiLFxyXG4gICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFrZS1sb3Vpc2UuanBnXCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBuYW1lOiBcIkJhbGQgTW91bnRhaW5zXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9iYWxkLW1vdW50YWlucy5qcGdcIixcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6IFwiTGF0ZW1hclwiLFxyXG4gICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGF0ZW1hci5qcGdcIixcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6IFwiVmFub2lzZSBOYXRpb25hbCBQYXJrXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC92YW5vaXNlLmpwZ1wiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJMYWdvIGRpIEJyYWlzZXNcIixcclxuICAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xhZ28uanBnIFwiLFxyXG4gICAgfSxcclxuICBdO1xyXG5cclxuICAvL1Byb2ZpbGUgUXVlcmllc1xyXG5jb25zdCBwcm9maWxlRWRpdE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWVkaXQtbW9kYWxcIik7XHJcbmNvbnN0IHByb2ZpbGVFZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWVkaXQtYnV0dG9uXCIpO1xyXG5jb25zdCBhZGROZXdDYXJkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGQtYnV0dG9uXCIpO1xyXG5jb25zdCBwcm9maWxlUGljQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19pbWFnZS1idXR0b25cIik7XHJcbmNvbnN0IHByb2ZpbGVQaWNNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZV9faW1hZ2UtZWRpdFwiKTtcclxuY29uc3QgcHJvZmlsZUltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19pbWFnZVwiKTtcclxuXHJcbi8vTW9kYWwgUXVlcmllc1xyXG5jb25zdCBwcm9maWxlTW9kYWxGb3JtID0gcHJvZmlsZUVkaXRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xyXG5jb25zdCBwcm9maWxlTW9kYWxOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNtb2RhbC1pbnB1dC1uYW1lXCIpO1xyXG5jb25zdCBwcm9maWxlTW9kYWxEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIjbW9kYWwtaW5wdXQtZGVzY3JpcHRpb25cIlxyXG4pO1xyXG5cclxuLy9DYXJkIFF1ZXJpZXNcclxuY29uc3QgYWRkTmV3Q2FyZE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhZGQtbmV3LWNhcmRcIik7XHJcblxyXG4vL1ZBTElEQVRJT05cclxuY29uc3QgY29uZmlnID0gIHtcclxuICBmb3JtU2VsZWN0b3I6IFwiLm1vZGFsX19mb3JtXCIsXHJcbiAgaW5wdXRTZWxlY3RvcjogXCIubW9kYWxfX2lucHV0XCIsXHJcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19idXR0b25cIixcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19idXR0b25fZGlzYWJsZWRcIixcclxuICBpbnB1dEVycm9yQ2xhc3M6IFwibW9kYWxfX2lucHV0X3R5cGVfZXJyb3JcIixcclxuICBlcnJvckNsYXNzOiBcIm1vZGFsX19lcnJvcl92aXNpYmxlXCIsXHJcbn07XHJcblxyXG5leHBvcnQge3Byb2ZpbGVFZGl0TW9kYWwsIHByb2ZpbGVFZGl0QnV0dG9uLCBhZGROZXdDYXJkQnV0dG9uLCBwcm9maWxlUGljQnV0dG9uLCBwcm9maWxlUGljTW9kYWwsIHByb2ZpbGVJbWFnZSxcclxuICBwcm9maWxlTW9kYWxGb3JtLCBwcm9maWxlTW9kYWxOYW1lLCBwcm9maWxlTW9kYWxEZXNjcmlwdGlvbiwgYWRkTmV3Q2FyZE1vZGFsLCBjb25maWd9IiwiaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xyXG5pbXBvcnQgXCIuLi9wYWdlcy9pbmRleC5jc3NcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qc1wiO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XHJcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xyXG5pbXBvcnQgQXBpIGZyb20gXCIuLi9jb21wb25lbnRzL0FwaS5qc1wiO1xyXG5pbXBvcnQgIHsgXHJcbiAgcHJvZmlsZUVkaXRCdXR0b24sIGFkZE5ld0NhcmRCdXR0b24sIHByb2ZpbGVQaWNCdXR0b24sIHByb2ZpbGVQaWNNb2RhbCxcclxuICBwcm9maWxlSW1hZ2UsIHByb2ZpbGVNb2RhbEZvcm0sIHByb2ZpbGVNb2RhbE5hbWUsIHByb2ZpbGVNb2RhbERlc2NyaXB0aW9uLCBcclxuICBhZGROZXdDYXJkTW9kYWwsIGNvbmZpZyB9IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcclxuXHJcbi8vQVBJIEVWRU5UU1xyXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtcclxuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxXCIsXHJcbiAgaGVhZGVyczoge1xyXG4gICAgYXV0aG9yaXphdGlvbjogXCI1ZjJiNTg4YS0yNTBlLTQ5MjItYjc0YS0zMDZlY2I4MmJmZTZcIixcclxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuLy9TRUNUSU9OIFJFTkRFUkVSXHJcbmNvbnN0IGNhcmRTZWN0aW9uID0gbmV3IFNlY3Rpb24oXHJcbiAge1xyXG4gICAgcmVuZGVyZXI6IGdlbmVyYXRlQ2FyZCxcclxuICB9LFxyXG4gIFwiLmNhcmRzX19saXN0XCJcclxuKTtcclxuXHJcbmZ1bmN0aW9uIGdlbmVyYXRlQ2FyZChpdGVtKSB7XHJcbiAgY29uc3QgY2FyZEVsZW1lbnQgPSByZW5kZXJDYXJkKGl0ZW0pO1xyXG4gIGNhcmRTZWN0aW9uLmFkZEl0ZW0oY2FyZEVsZW1lbnQpO1xyXG59XHJcblxyXG4vL1JFTkRFUiBDQVJEXHJcbmZ1bmN0aW9uIHJlbmRlckNhcmQoZGF0YSkge1xyXG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChkYXRhLCBcIiNjYXJkLXRlbXBsYXRlXCIsIHtcclxuICAgIGhhbmRsZUltYWdlQ2xpY2s6ICgpID0+IGltYWdlUG9wdXAub3BlbihkYXRhKSxcclxuICAgIGhhbmRsZURlbGV0ZUNsaWNrLFxyXG4gICAgaGFuZGxlQ2FyZExpa2VcclxuICB9KTtcclxuICByZXR1cm4gY2FyZC5nZXRDYXJkKCk7XHJcbn1cclxuXHJcbi8vSU1BR0UgUE9QVVBcclxuY29uc3QgaW1hZ2VQb3B1cCA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIiNwcmV2aWV3LWltYWdlLW1vZGFsXCIpO1xyXG5pbWFnZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4vL0RFTEVURSBDQVJEIFBPUFVQXHJcbmNvbnN0IGRlbGV0ZUNhcmRQb3B1cCA9IG5ldyBQb3B1cFdpdGhDb25maXJtYXRpb24oXCIjY2FyZF9fZGVsZXRlLW1vZGFsXCIpO1xyXG5kZWxldGVDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcblxyXG5mdW5jdGlvbiBoYW5kbGVEZWxldGVDbGljayhjYXJkKSB7XHJcbiAgZGVsZXRlQ2FyZFBvcHVwLm9wZW4oKTtcclxuICBkZWxldGVDYXJkUG9wdXAuc2V0U3VibWl0QWN0aW9uKCgpID0+IHtcclxuICAgIGRlbGV0ZUNhcmRQb3B1cC5zZXRTdWJtaXRUZXh0KHRydWUsIFwiRGVsZXRpbmcuLi5cIik7XHJcbiAgICBhcGlcclxuICAgICAgLmRlbGV0ZUNhcmQoY2FyZC5pZClcclxuICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgIGRlbGV0ZUNhcmRQb3B1cC5jbG9zZSgpO1xyXG4gICAgICAgIGNhcmQucmVtb3ZlQ2FyZCgpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSlcclxuICAgICAgLmZpbmFsbHkoKCkgPT4gZGVsZXRlQ2FyZFBvcHVwLnNldFN1Ym1pdFRleHQoZmFsc2UpKTtcclxuICB9KTtcclxufVxyXG5cclxuXHJcblxyXG4vL0ZPUk0gUE9QVVBcclxuY29uc3Qgb3BlbkltYWdlUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICBcIiNhZGQtbmV3LWNhcmRcIixcclxuICBoYW5kbGVJbWFnZUZvcm1TdWJtaXRcclxuKTtcclxuY29uc3QgZWRpdFByb2ZpbGUgPSBuZXcgUG9wdXBXaXRoRm9ybShcIiNwcm9maWxlLWVkaXQtbW9kYWxcIiwgaGFuZGxlRm9ybVN1Ym1pdCk7XHJcbmNvbnN0IHByb2ZpbGVQaWNFZGl0ID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgXCIjcHJvZmlsZV9faW1hZ2UtZWRpdFwiLFxyXG4gIHByb2ZpbGVQaWNFZGl0U3VibWl0XHJcbik7XHJcblxyXG5lZGl0UHJvZmlsZS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5wcm9maWxlUGljRWRpdC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5vcGVuSW1hZ2VQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgaGFuZGxlRWRpdEZvcm1TdWJtaXQgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIHByb2ZpbGVNb2RhbEZvcm0pO1xyXG5jb25zdCBoYW5kbGVQcm9maWxlRm9ybVN1Ym1pdCA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgcHJvZmlsZVBpY01vZGFsKTtcclxuY29uc3QgaGFuZGxlQ2FyZEZvcm1TdWJtaXQgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIGFkZE5ld0NhcmRNb2RhbCk7XHJcblxyXG5oYW5kbGVFZGl0Rm9ybVN1Ym1pdC5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbmhhbmRsZVByb2ZpbGVGb3JtU3VibWl0LmVuYWJsZVZhbGlkYXRpb24oKTtcclxuaGFuZGxlQ2FyZEZvcm1TdWJtaXQuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuLy9GT1JNIFNVQk1JVFxyXG5mdW5jdGlvbiBoYW5kbGVGb3JtU3VibWl0KGRhdGEpIHtcclxuICBlZGl0UHJvZmlsZS5zZXRTdWJtaXRUZXh0KHRydWUsIFwiU2F2aW5nLi4uXCIpO1xyXG4gIGFwaVxyXG4gICAgLnByb2ZpbGVVcGRhdGUoZGF0YSlcclxuICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgdXNlckluZm8uc2V0VXNlckluZm8oZGF0YSk7XHJcbiAgICAgIGVkaXRQcm9maWxlLnNldFN1Ym1pdFRleHQoZmFsc2UpO1xyXG4gICAgICBlZGl0UHJvZmlsZS5jbG9zZSgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICB9KTtcclxuXHJcbn1cclxuXHJcbi8vIC8vSU1BR0UgU1VCTUlUXHJcbmZ1bmN0aW9uIGhhbmRsZUltYWdlRm9ybVN1Ym1pdChkYXRhKSB7XHJcbiAgY29uc3QgbmFtZSA9IGRhdGEubmFtZTtcclxuICBjb25zdCBsaW5rID0gZGF0YS51cmw7XHJcbiAgb3BlbkltYWdlUG9wdXAuc2V0U3VibWl0VGV4dCh0cnVlLCBcIlNhdmluZy4uLlwiKTtcclxuICBhcGlcclxuICAgIC5hZGRDYXJkKG5hbWUsIGxpbmspXHJcbiAgICAudGhlbigoY2FyZCkgPT4ge1xyXG4gICAgICBnZW5lcmF0ZUNhcmQoY2FyZCk7XHJcbiAgICAgIG9wZW5JbWFnZVBvcHVwLnNldFN1Ym1pdFRleHQoZmFsc2UpXHJcbiAgICAgIG9wZW5JbWFnZVBvcHVwLmNsb3NlKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgIH0pO1xyXG4gIFxyXG59XHJcblxyXG5mdW5jdGlvbiBwcm9maWxlUGljRWRpdFN1Ym1pdChkYXRhKSB7XHJcbiAgY29uc3QgdXJsID0gZGF0YS51cmw7XHJcbiAgcHJvZmlsZVBpY0VkaXQuc2V0U3VibWl0VGV4dCh0cnVlLCBcIkxvYWRpbmcuLi5cIik7XHJcbiAgYXBpXHJcbiAgICAudXBkYXRlUHJvZmlsZUF2YXRhcih1cmwpXHJcbiAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgIHByb2ZpbGVJbWFnZS5zcmMgPSB1cmw7XHJcbiAgICAgIHByb2ZpbGVQaWNFZGl0LmNsb3NlKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgIH0pXHJcbiAgICAuZmluYWxseSgoKSA9PiBwcm9maWxlUGljRWRpdC5zZXRTdWJtaXRUZXh0KGZhbHNlKSk7XHJcbn1cclxuXHJcbi8vSU1BR0UgTElLRVxyXG5mdW5jdGlvbiBoYW5kbGVDYXJkTGlrZShjYXJkKSB7XHJcbiAgY29uc3QgbmV3TGlrZVN0YXR1cyA9ICFjYXJkLmlzTGlrZWQ7XHJcbiAgaWYobmV3TGlrZVN0YXR1cykge1xyXG4gICAgYXBpLmNhcmRMaWtlKGNhcmQuZ2V0SWQoKSlcclxuICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgY2FyZC5zZXRMaWtlU3RhdHVzKHJlcy5pc0xpa2VkKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgfSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGFwaS5yZW1vdmVMaWtlKGNhcmQuZ2V0SWQoKSlcclxuICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgY2FyZC5zZXRMaWtlU3RhdHVzKHJlcy5pc0xpa2VkKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG4vL1BST0ZJTEUgRURJVCBQT1BVUFxyXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyhcclxuICBcIi5wcm9maWxlX190aXRsZVwiLFxyXG4gIFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIsXHJcbiAgXCIucHJvZmlsZV9faW1hZ2VcIlxyXG4pO1xyXG5cclxuLy9FVkVOVCBMSVNURU5FUlNcclxucHJvZmlsZUVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBjb25zdCBjdXJyZW50VXNlciA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XHJcbiAgcHJvZmlsZU1vZGFsTmFtZS52YWx1ZSA9IGN1cnJlbnRVc2VyLm5hbWU7XHJcbiAgcHJvZmlsZU1vZGFsRGVzY3JpcHRpb24udmFsdWUgPSBjdXJyZW50VXNlci50aXRsZTtcclxuICBlZGl0UHJvZmlsZS5vcGVuKCk7XHJcbn0pO1xyXG5cclxuYWRkTmV3Q2FyZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGhhbmRsZUNhcmRGb3JtU3VibWl0LnRvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgb3BlbkltYWdlUG9wdXAub3BlbigpO1xyXG59KTtcclxuXHJcbnByb2ZpbGVQaWNCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBwcm9maWxlUGljRWRpdC5vcGVuKCk7XHJcbn0pO1xyXG5cclxuLy9BUEkgQ0FMTFNcclxuUHJvbWlzZS5hbGwoW2FwaS5nZXRVc2VySW5mbygpLCBhcGkuZ2V0SW5pdGlhbENhcmRzKCldKVxyXG4gIC50aGVuKChbZGF0YSwgY2FyZHNdKSA9PiB7XHJcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyh7XHJcbiAgICAgIGFib3V0OiBkYXRhLmFib3V0LFxyXG4gICAgICB0aXRsZTogZGF0YS5uYW1lLFxyXG4gICAgICBhdmF0YXI6IGRhdGEuYXZhdGFyLFxyXG4gICAgfSk7XHJcbiAgICBjYXJkU2VjdGlvbi5yZW5kZXJJdGVtcyhjYXJkcyk7XHJcbiAgfSlcclxuICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgY29uc29sZS5sb2coZXJyKTtcclxuICB9KTtcclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcclxuICBjb25zdHJ1Y3Rvcih7IGJhc2VVcmwsIGhlYWRlcnMgfSkge1xyXG4gICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XHJcbiAgICB0aGlzLl9oZWFkZXJzID0gaGVhZGVycztcclxuICAgIHRoaXMuX2F1dGhvcml6YXRpb24gPSBoZWFkZXJzLmF1dGhvcml6YXRpb247XHJcbiAgICB0aGlzLl9jb250ZW50VHlwZSA9IGhlYWRlcnNbXCJDb250ZW50LVR5cGVcIl07XHJcbiAgfVxyXG5cclxuICAvL0NoZWNrIGlmIEpTT04gb2JqZWN0IG9rXHJcbiAgX2NoZWNrUmVzcG9uc2VPayhyZXMpIHtcclxuICAgIGlmIChyZXMub2spIHtcclxuICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBQcm9taXNlLnJlamVjdChgRXJvcnI6ICR7cmVzLnN0YXR1c31gKVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy9HZXQgaW5pdGlhbCBjYXJkcyBmcm9tIFVSTFxyXG4gIGdldEluaXRpYWxDYXJkcygpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZU9rKVxyXG5cclxuICB9XHJcblxyXG4gIC8vR2V0IHVzZXIgaW5mb1xyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlT2spXHJcblxyXG4gIH1cclxuXHJcbiAgLy9Qcm9maWxlIFVwZGF0ZVxyXG4gIHByb2ZpbGVVcGRhdGUoZGF0YSkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIG5hbWU6IGRhdGEudGl0bGUsXHJcbiAgICAgICAgYWJvdXQ6IGRhdGEuYWJvdXQsXHJcbiAgICAgIH0pLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlT2spXHJcblxyXG4gIH1cclxuXHJcbiAgLy9BZGRpbmcgQ2FyZHNcclxuICBhZGRDYXJkKHRpdGxlLCBsaW5rKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lOiB0aXRsZSxcclxuICAgICAgICBsaW5rOiBsaW5rLFxyXG4gICAgICB9KSxcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZU9rKVxyXG5cclxuICB9XHJcblxyXG4gIC8vRGVsZXRlaW5nIENhcmRzXHJcbiAgZGVsZXRlQ2FyZChpZCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7aWR9YCwge1xyXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2VPaylcclxuXHJcbiAgfVxyXG5cclxuICAvL0xpa2UgQnV0dG9uXHJcbiAgY2FyZExpa2UoaWQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2lkfS9saWtlc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlT2spXHJcblxyXG4gIH1cclxuXHJcbiAgLy9SZW1vdmUgTGlrZSBmcm9tIGNhcmRcclxuICByZW1vdmVMaWtlKGlkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtpZH0vbGlrZXNgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZU9rKVxyXG5cclxuICB9XHJcblxyXG4gIC8vUHJvZmlsZSBwaWN0dXJlIHVwZGF0ZVxyXG4gIHVwZGF0ZVByb2ZpbGVBdmF0YXIobGluaykge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBhdmF0YXI6IGxpbmssXHJcbiAgICAgIH0pLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlT2spXHJcblxyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcih7IHJlbmRlcmVyIH0sIHNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICByZW5kZXJJdGVtcyhpdGVtcykge1xyXG4gICAgY29uc29sZS5sb2coXCJDQVJEU1wiLCBpdGVtcyk7XHJcbiAgICAvLyB1c2UgdGhpcy5fcmVuZGVyZXIgdG8gY3JlYXRlIHRoZSBlbGVtZW50cyBmb3IgcmVuZGVyaW5nXHJcbiAgICBpdGVtcy5mb3JFYWNoKHRoaXMuX3JlbmRlcmVyKTtcclxuICB9XHJcblxyXG4gIGFkZEl0ZW0oaXRlbSkge1xyXG4gICAgLy8gdGFrZSB0aGUgaXRlbSBhbmQgcmVuZGVyIGl0IGludG8gdGhpcy5fZWxlbWVudFxyXG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoaXRlbSk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9pbWFnZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19pbWFnZS1wcmV2aWV3XCIpO1xyXG4gICAgdGhpcy5fY2FwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlLXByZXZpZXctdGl0bGVcIik7XHJcbiAgfVxyXG5cclxuICBvcGVuKGRhdGEpIHtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICAgIHRoaXMuX2ltYWdlLnNyYyA9IGRhdGEubGluaztcclxuICAgIHRoaXMuX2ltYWdlLmFsdCA9IGBQaG90byBvZiAke2RhdGEubmFtZX1gO1xyXG4gICAgdGhpcy5fY2FwdGlvbi50ZXh0Q29udGVudCA9IGRhdGEubmFtZTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhDb25maXJtYXRpb24gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9wb3B1cENvbmZpcm0gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcclxuICAgIHRoaXMuX3BvcHVwU3VibWl0ID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIFwiLm1vZGFsX19idXR0b24tZGVsZXRlXCJcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBzZXRTdWJtaXRBY3Rpb24oYWN0aW9uKSB7XHJcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gYWN0aW9uO1xyXG4gIH1cclxuXHJcbiAgc2V0U3VibWl0VGV4dChzdWJtaXQsIHN1Ym1pdFRleHQgPSBcIlNhdmluZy4uLlwiKSB7XHJcbiAgICBpZiAoc3VibWl0KSB7XHJcbiAgICAgIHRoaXMuX3BvcHVwU3VibWl0LnRleHRDb250ZW50ID0gc3VibWl0VGV4dDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX3BvcHVwU3VibWl0LnRleHRDb250ZW50ID0gXCJZZXNcIjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fcG9wdXBDb25maXJtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KCk7XHJcbiAgICB9KTtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJpbmZvIHtcclxuICBjb25zdHJ1Y3Rvcih1c2VyTmFtZVNlbGVjdG9yLCBqb2JTZWxlY3RvciwgdXNlckF2YXRhcikge1xyXG4gICAgdGhpcy5fbmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodXNlck5hbWVTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl90aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioam9iU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fdXNlckF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodXNlckF2YXRhcik7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIGNvbnN0IGluZm8gPSB7XHJcbiAgICAgIG5hbWU6IHRoaXMuX25hbWUudGV4dENvbnRlbnQsXHJcbiAgICAgIHRpdGxlOiB0aGlzLl90aXRsZS50ZXh0Q29udGVudCxcclxuICAgIH07XHJcbiAgICByZXR1cm4gaW5mbztcclxuICAgIC8vcmV0dXJucyBhbiBvYmplY3Qgd2l0aCBpbmZvIGFib3V0IHRoZSB1c2VyLlxyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8oZGF0YSkge1xyXG4gICAgdGhpcy5fbmFtZS50ZXh0Q29udGVudCA9IGRhdGEudGl0bGU7XHJcbiAgICB0aGlzLl90aXRsZS50ZXh0Q29udGVudCA9IGRhdGEuYWJvdXQ7XHJcbiAgICBpZiAoZGF0YS5hdmF0YXIpIHRoaXMuX3VzZXJBdmF0YXIuc3JjID0gZGF0YS5hdmF0YXI7XHJcbiAgICAvL3Rha3NlcyBhIG5ldyB1c2VyIGRhdGEgYW5kIGFkZHMgaXQgb24gdGhlIHBhZ2UuXHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJDYXJkIiwiY29uc3RydWN0b3IiLCJkYXRhIiwiY2FyZFNlbGVjdG9yIiwiX3JlZiIsImhhbmRsZUltYWdlQ2xpY2siLCJoYW5kbGVEZWxldGVDbGljayIsImhhbmRsZUNhcmRMaWtlIiwidGhpcyIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwibGluayIsImlzTGlrZWQiLCJpZCIsIl9pZCIsIl9jYXJkU2VsZWN0b3IiLCJfaGFuZGxlSW1hZ2VDbGljayIsIl9oYW5kbGVEZWxldGVDbGljayIsIl9oYW5kbGVDYXJkTGlrZSIsIl9zZXRFdmVudExpc3RlbmVycyIsIl9jYXJkRWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJhZGRFdmVudExpc3RlbmVyIiwic2V0TGlrZVN0YXR1cyIsIl9yZW5kZXJMaWtlcyIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsInJlbW92ZUNhcmQiLCJnZXRDYXJkIiwiZG9jdW1lbnQiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiX2NhcmRJbWFnZSIsInN0eWxlIiwiYmFja2dyb3VuZEltYWdlIiwidGV4dENvbnRlbnQiLCJnZXRJZCIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cEVsZW1lbnQiLCJfcG9wdXBDbG9zZSIsIm9wZW4iLCJfY2xvc2VNb2RhbEVzY2FwZSIsImNsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImV2dCIsImtleSIsInNldEV2ZW50TGlzdGVuZXJzIiwidGFyZ2V0IiwiY29udGFpbnMiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsInN1cGVyIiwiX3BvcHVwRm9ybSIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX3BvcHVwU3VibWl0IiwiX2dldElucHV0VmFsdWVzIiwiaW5wdXRMaXN0IiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJpbnB1dCIsInZhbHVlIiwic2V0U3VibWl0VGV4dCIsInN1Ym1pdCIsInN1Ym1pdFRleHQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJyZXNldCIsImNvbmZpZyIsImZvcm1FbGVtZW50IiwiX2lucHV0U2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX2Zvcm1FbGVtZW50IiwiX3Nob3dJbnB1dEVycm9yIiwiaW5wdXRFbGVtZW50IiwiZXJyb3JNZXNzYWdlRWwiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsIl9oaWRlSW5wdXRFcnJvciIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hhc0ludmFsaWRJbnB1dCIsImV2ZXJ5IiwidG9nZ2xlQnV0dG9uU3RhdGUiLCJfaW5wdXRFbHMiLCJfc3VibWl0QnV0dG9uIiwiZGlzYWJsZWQiLCJlbmFibGVWYWxpZGF0aW9uIiwicHJldmVudERlZmF1bHQiLCJwcm9maWxlRWRpdE1vZGFsIiwicHJvZmlsZUVkaXRCdXR0b24iLCJhZGROZXdDYXJkQnV0dG9uIiwicHJvZmlsZVBpY0J1dHRvbiIsInByb2ZpbGVQaWNNb2RhbCIsInByb2ZpbGVJbWFnZSIsInByb2ZpbGVNb2RhbEZvcm0iLCJwcm9maWxlTW9kYWxOYW1lIiwicHJvZmlsZU1vZGFsRGVzY3JpcHRpb24iLCJhZGROZXdDYXJkTW9kYWwiLCJmb3JtU2VsZWN0b3IiLCJhcGkiLCJiYXNlVXJsIiwiaGVhZGVycyIsIl9iYXNlVXJsIiwiX2hlYWRlcnMiLCJfYXV0aG9yaXphdGlvbiIsImF1dGhvcml6YXRpb24iLCJfY29udGVudFR5cGUiLCJfY2hlY2tSZXNwb25zZU9rIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImdldEluaXRpYWxDYXJkcyIsImZldGNoIiwidGhlbiIsImdldFVzZXJJbmZvIiwicHJvZmlsZVVwZGF0ZSIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwidGl0bGUiLCJhYm91dCIsImFkZENhcmQiLCJkZWxldGVDYXJkIiwiY2FyZExpa2UiLCJyZW1vdmVMaWtlIiwidXBkYXRlUHJvZmlsZUF2YXRhciIsImF2YXRhciIsImNhcmRTZWN0aW9uIiwic2VsZWN0b3IiLCJyZW5kZXJlciIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJyZW5kZXJJdGVtcyIsIml0ZW1zIiwiY29uc29sZSIsImxvZyIsImFkZEl0ZW0iLCJpdGVtIiwicHJlcGVuZCIsImdlbmVyYXRlQ2FyZCIsImNhcmRFbGVtZW50IiwiaW1hZ2VQb3B1cCIsIl9pbWFnZSIsIl9jYXB0aW9uIiwic3JjIiwiYWx0IiwiZGVsZXRlQ2FyZFBvcHVwIiwiX3BvcHVwQ29uZmlybSIsInNldFN1Ym1pdEFjdGlvbiIsImFjdGlvbiIsImUiLCJjYXJkIiwiY2F0Y2giLCJlcnIiLCJmaW5hbGx5Iiwib3BlbkltYWdlUG9wdXAiLCJ1cmwiLCJlZGl0UHJvZmlsZSIsInVzZXJJbmZvIiwic2V0VXNlckluZm8iLCJwcm9maWxlUGljRWRpdCIsImhhbmRsZUVkaXRGb3JtU3VibWl0IiwiRm9ybVZhbGlkYXRvciIsImhhbmRsZVByb2ZpbGVGb3JtU3VibWl0IiwiaGFuZGxlQ2FyZEZvcm1TdWJtaXQiLCJ1c2VyTmFtZVNlbGVjdG9yIiwiam9iU2VsZWN0b3IiLCJ1c2VyQXZhdGFyIiwiX3RpdGxlIiwiX3VzZXJBdmF0YXIiLCJjdXJyZW50VXNlciIsImFsbCIsImNhcmRzIl0sInNvdXJjZVJvb3QiOiIifQ==