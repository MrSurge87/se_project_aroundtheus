!function(){"use strict";class e{constructor(e,t,s){let{handleImageClick:r,handleDeleteClick:n}=s;this._name=e.name,this._link=e.link,this.id=e._id,this._cardSelector=t,this._handleImageClick=r,this._handleDeleteClick=n}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>this._handleLikeIcon())),this._cardElement.querySelector(".card__button-delete").addEventListener("click",(()=>this._handleDeleteClick(this)))}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}removeCard(){this._cardElement.remove()}getCard(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardImage.style.backgroundImage=`url(${this._link})`,this._cardElement.querySelector(".card__title").textContent=this._name,this._cardImage.addEventListener("click",this._handleImageClick),this._setEventListeners(),this._cardElement}}class t{constructor(e){this._popupElement=document.querySelector(e),this._popupClose=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._closeModalEscape)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._closeModalEscape)}_closeModalEscape=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}class s extends t{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t}_getInputValues(){const e=this._popupForm.querySelectorAll(".modal__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(()=>{this._handleFormSubmit(this._getInputValues())}))}close(){this._popupForm.reset(),super.close()}}var r=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}toggleButtonState(){if(this._hasInvalidInput(this._inputEls))return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputEls=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState(this._inputEls)}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class n extends t{constructor(e){super(e),this._popupConfirm=this._popupElement.querySelector(".modal__form"),this._popupSubmit=this._popupElement.querySelector(".modal__button")}setSubmitAction(e){this._handleFormSubmit=e}setSubmitText(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._popupSubmit.textContent=e?t:"Yes"}setEventListeners(){this._popupConfirm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()})),super.setEventListeners()}}const i=document.querySelector("#profile-edit-modal"),o=document.querySelector("#profile-edit-button"),a=document.querySelector(".profile__add-button"),l=document.querySelector("#profile__name"),c=document.querySelector("#profile__description"),d=document.querySelector(".profile__image-button"),h=document.querySelector("#profile__image-edit"),u=document.querySelector("#modal-input-url"),_=document.querySelector(".profile__image"),m=i.querySelector(".modal__form"),p=document.querySelector("#modal-input-name"),v=document.querySelector("#modal-input-description"),E=document.querySelector("#modal-input-title"),S=document.querySelector("#modal-Url"),f=document.querySelector("#add-new-card"),b=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s,this._authorization=s.authorization,this._contentType=s["Content-Type"]}_checkResponseOk(e){if(e.ok)return e.json();Promise.reject(`Erorr: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponseOk).catch((e=>{console.log(e)}))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponseOk).catch((e=>{console.log(e)}))}profileUpdate(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",body:JSON.stringify({name:e.title,about:e.description}),headers:this._headers}).then(this._checkResponseOk).catch((e=>{console.log(e)}))}addCard(e,t){return fetch(`${this._baseUrl}/cards`,{method:"POST",body:JSON.stringify({name:e,link:t}),headers:this._headers}).then(this._checkResponseOk).catch((e=>{console.log(e)}))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponseOk).catch((e=>{console.log(e)}))}cardLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponseOk).catch((e=>{console.log(e)}))}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponseOk).catch((e=>{console.log(e)}))}updateProfileAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponseOk).catch((e=>{console.log(e)}))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"5f2b588a-250e-4922-b74a-306ecb82bfe6","Content-Type":"application/json"}}),g={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},y=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){console.log("CARDS",e),e.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}({renderer:k},".cards__list");function k(t){const s=new e(r=t,"#card-template",{handleImageClick:()=>C.open(r),handleDeleteClick:w});var r;y.addItem(s.getCard())}const C=new class extends t{constructor(e){super(e),this._image=this._popupElement.querySelector(".modal__image-preview"),this._caption=document.querySelector(".modal__image-preview-title")}open(e){super.open(),this._image.src=e.link,this._image.alt=`Photo of ${e.name}`,this._caption.textContent=e.name}}("#preview-image-modal");C.setEventListeners();const L=new n("#card__delete-modal");L.setEventListeners();const q=new n("#profile-edit-modal");q.setEventListeners();const I=new n("#add-new-card");function w(e){L.open(),L.setSubmitAction((()=>{L.setSubmitText(!0,"Deleting..."),b.deleteCard(e.id).then((()=>{L.close(),e.removeCard()})).catch((e=>console.log(e))).finally((()=>L.setSubmitText(!1)))}))}I.setEventListeners();const U=new s("#add-new-card",(function(){const e=E.value,t=S.value;b.addCard(e,t).then((()=>{k({name:e,link:t}),I.setSubmitText(!0,"Saving..."),U.close()}))})),x=new s("#profile-edit-modal",(function(e){b.profileUpdate(e).then((()=>{O.setUserInfo(e),q.setSubmitText(!0,"Saving..."),x.close()}))})),B=new s("#profile__image-edit",(function(){const e=u.value;b.updateProfileAvatar(e).then((()=>{_.src=e,B.close()}))}));x.setEventListeners(),B.setEventListeners(),U.setEventListeners();const $=new r(g,m),T=new r(g,h),A=new r(g,f);$.enableValidation(),T.enableValidation(),A.enableValidation();const O=new class{constructor(e,t,s){this._name=document.querySelector(e),this._title=document.querySelector(t),this._userAvatar=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,title:this._title.textContent}}setUserInfo(e){this._name.textContent=e.title,this._title.textContent=e.description}setUserAvatar(e,t){this._userAvatar.src=e,this._userAvatar.alt=t+" avatar"}}(".profile__title",".profile__description");o.addEventListener("click",(()=>{p.value=l.textContent,v.value=c.textContent.trim(),x.open()})),a.addEventListener("click",(()=>{A.toggleButtonState(),U.open()})),d.addEventListener("click",(()=>{B.open()})),Promise.all([b.getUserInfo(),b.getInitialCards()]).then((e=>{let[t,s]=e;O.setUserInfo({description:t.about,title:t.name}),y.renderItems(s)})).catch((e=>{console.log(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,