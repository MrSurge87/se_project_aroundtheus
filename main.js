!function(){"use strict";class e{constructor(e,t,s){let{handleImageClick:n}=s;this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=n}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>this._handleLikeIcon())),this._cardElement.querySelector(".card__button-delete").addEventListener("click",(()=>this._handleDeleteCard()))}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteCard(){this._cardElement.remove()}getCard(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardImage.style.backgroundImage=`url(${this._link})`,this._cardElement.querySelector(".card__title").textContent=this._name,this._cardImage.addEventListener("click",this._handleImageClick),this._setEventListeners(),this._cardElement}}class t{constructor(e){this._popupElement=document.querySelector(e),this._popupClose=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._closeModalEscape)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._closeModalEscape)}_closeModalEscape=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}class s extends t{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t}_getInputValues(){const e=this._popupForm.querySelectorAll(".modal__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(()=>{this._handleFormSubmit(this._getInputValues())}))}close(){this._popupForm.reset(),super.close()}}var n=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}toggleButtonState(){if(this._hasInvalidInput(this._inputEls))return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputEls=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState(this._inputEls)}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};const r=document.querySelector("#profile-edit-modal"),o=document.querySelector("#profile-edit-button"),i=document.querySelector(".profile__add-button"),a=document.querySelector("#profile__name"),l=document.querySelector("#profile__description"),c=r.querySelector(".modal__form"),u=document.querySelector("#modal-input-name"),d=document.querySelector("#modal-input-description"),m=document.querySelector("#modal-input-title"),_=document.querySelector("#modal-Url"),p=document.querySelector("#add-new-card"),h=(document.querySelector("#add-card-form"),document.querySelector("#new-card-submit"),document.querySelector(".cards__list"),{formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"}),E=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemit Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braises",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg "}],renderer:v},".cards__list");function v(t){const s=new e(n=t,"#card-template",{handleImageClick:()=>S.open(n)});var n;E.addItem(s.getCard())}E.renderItems();const S=new class extends t{constructor(e){super(e),this._image=this._popupElement.querySelector(".modal__image-preview"),this._caption=document.querySelector(".modal__image-preview-title")}open(e){super.open(),this._image.src=e.link,this._image.alt=`Photo of ${e.name}`,this._caption.textContent=e.name}}("#preview-image-modal");S.setEventListeners();const g=new s("#add-new-card",(function(){v({name:m.value,link:_.value}),g.close()})),y=new s("#profile-edit-modal",(function(e){console.log(e),w.setUserInfo(e),y.close()}));y.setEventListeners(),g.setEventListeners();const f=new n(h,c),L=new n(h,p);f.enableValidation(),L.enableValidation();const w=new class{constructor(e,t){this._name=document.querySelector(e),this._title=document.querySelector(t)}getUserInfo(){return{name:this._name.textContent,title:this._title.textContent}}setUserInfo(e){this._name.textContent=e.title,this._title.textContent=e.description}}(".profile__title",".profile__description");o.addEventListener("click",(()=>{u.value=a.textContent,d.value=l.textContent.trim(),y.open()})),i.addEventListener("click",(()=>{L.toggleButtonState(),g.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUFBWWhGLE9BQ2QsSUFkQWdGLEVBQVk1RSxvQkFDWjJFLEVBQWUzRSxvQkFFZixNQUFNaUYsRUFBb0IsSUFBSUMsRUFBY25FLEVBQVFtQyxHQUM5Q2lDLEVBQW9CLElBQUlELEVBQWNuRSxFQUFRd0MsR0FFcEQwQixFQUFrQnRDLG1CQUNsQndDLEVBQWtCeEMsbUJBa0JsQixNQUFNb0MsRUFBVyxJR2hJRixNQUNidkgsV0FBQUEsQ0FBWTRILEVBQWtCQyxHQUM1QnhILEtBQUtDLE1BQVFnQixTQUFTUixjQUFjOEcsR0FDcEN2SCxLQUFLeUgsT0FBU3hHLFNBQVNSLGNBQWMrRyxFQUN2QyxDQUVBRSxXQUFBQSxHQUtFLE1BSmEsQ0FDWHhILEtBQU1GLEtBQUtDLE1BQU1zQixZQUNqQm9HLE1BQU8zSCxLQUFLeUgsT0FBT2xHLFlBSXZCLENBRUE0RixXQUFBQSxDQUFZdkgsR0FDVkksS0FBS0MsTUFBTXNCLFlBQWMzQixFQUFLK0gsTUFDOUIzSCxLQUFLeUgsT0FBT2xHLFlBQWMzQixFQUFLZ0ksV0FFakMsR0g2RzRCLGtCQUFtQix5QkFHakQzQyxFQUFrQnZFLGlCQUFpQixTQUFTLEtBQzFDNEUsRUFBaUJ0QyxNQUFRbUMsRUFBWTVELFlBQ3JDZ0UsRUFBd0J2QyxNQUFRb0MsRUFBbUI3RCxZQUFZc0csT0FDL0RkLEVBQVluRixNQUFNLElBSXBCc0QsRUFBaUJ4RSxpQkFBaUIsU0FBUyxLQUN6QzRHLEVBQWtCNUMsb0JBQ2xCb0MsRUFBZWxGLE1BQU0sRyIsInNvdXJjZXMiOlsid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xyXG4gIGNvbnN0cnVjdG9yKGRhdGEsIGNhcmRTZWxlY3RvciwgeyBoYW5kbGVJbWFnZUNsaWNrIH0pIHtcclxuICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XHJcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xyXG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xyXG4gICAgdGhpcy5faGFuZGxlSW1hZ2VDbGljayA9IGhhbmRsZUltYWdlQ2xpY2s7XHJcbiAgfVxyXG5cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAvL1wiLmNhcmRfX2xpa2UtYnV0dG9uXCJcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpXHJcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gdGhpcy5faGFuZGxlTGlrZUljb24oKSk7XHJcblxyXG4gICAgLy9cIi5jYXJkX19kZWxldGUtYnV0dG9uXCJcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2J1dHRvbi1kZWxldGVcIilcclxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB0aGlzLl9oYW5kbGVEZWxldGVDYXJkKCkpO1xyXG5cclxuICB9XHJcblxyXG4gIF9oYW5kbGVMaWtlSWNvbigpIHtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpXHJcbiAgICAgIC5jbGFzc0xpc3QudG9nZ2xlKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZURlbGV0ZUNhcmQoKSB7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5yZW1vdmUoKTtcclxuICB9XHJcblxyXG4gIGdldENhcmQoKSB7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IGRvY3VtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcilcclxuICAgICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkXCIpXHJcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgICAvL2dldCB0aGUgY2FyZCB2aWV3XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2UgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpO1xyXG4gICAgdGhpcy5fY2FyZEltYWdlLnN0eWxlLmJhY2tncm91bmRJbWFnZSA9IGB1cmwoJHt0aGlzLl9saW5rfSlgO1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190aXRsZVwiKS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XHJcbiAgICAvL3NldCBldmVudCBsaXN0ZW5lcnNcclxuICAgIHRoaXMuX2NhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5faGFuZGxlSW1hZ2VDbGljayk7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgLy8gcmV0dXJuIHRoZSBjYXJkXHJcbiAgICByZXR1cm4gdGhpcy5fY2FyZEVsZW1lbnQ7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fcG9wdXBDbG9zZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jbG9zZVwiKTtcclxuICB9XHJcblxyXG4gIG9wZW4oKSB7XHJcbiAgICAvL29wZW5zIHBvcHVwXHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcIm1vZGFsX29wZW5lZFwiKTtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2Nsb3NlTW9kYWxFc2NhcGUpO1xyXG4gIH1cclxuXHJcbiAgY2xvc2UoKSB7XHJcbiAgICAvL2Nsb3NlcyBwb3B1cFxyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9jbG9zZU1vZGFsRXNjYXBlKTtcclxuICB9XHJcblxyXG4gIF9jbG9zZU1vZGFsRXNjYXBlID0gKGV2dCkgPT4ge1xyXG4gICAgLy9saXN0ZW5zIGZvciBlc2MgYnV0dG9uXHJcbiAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAvL3NldHMgZXZlbnQgbGlzdGVuZXJzXHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcclxuICAgICAgaWYgKFxyXG4gICAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwibW9kYWxcIikgfHxcclxuICAgICAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcIm1vZGFsX19jbG9zZVwiKVxyXG4gICAgICApIHtcclxuICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCkge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9wb3B1cEZvcm0gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gIH1cclxuXHJcbiAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgY29uc3QgaW5wdXRMaXN0ID0gdGhpcy5fcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2lucHV0XCIpO1xyXG4gICAgY29uc3QgZGF0YSA9IHt9O1xyXG4gICAgaW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XHJcbiAgICAgIGRhdGFbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIGRhdGE7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLl9wb3B1cEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoKSA9PiB7XHJcbiAgICAgIC8vZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fcG9wdXBGb3JtLnJlc2V0KCk7XHJcbiAgICBzdXBlci5jbG9zZSgpO1xyXG4gIH1cclxufVxyXG4iLCJjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICBjb25zdHJ1Y3Rvcihjb25maWcsIGZvcm1FbGVtZW50KSB7XHJcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gY29uZmlnLmlucHV0U2VsZWN0b3I7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IGNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcclxuICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSBjb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IGNvbmZpZy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gY29uZmlnLmVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xyXG4gIH1cclxuXHJcbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xyXG4gICAgY29uc3QgZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmBcclxuICAgICk7XHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG5cclxuICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlO1xyXG4gICAgZXJyb3JNZXNzYWdlRWwuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcclxuICB9XHJcblxyXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgIGNvbnN0IGVycm9yTWVzc2FnZUVsID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXHJcbiAgICApO1xyXG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gXCJcIjtcclxuICAgIGVycm9yTWVzc2FnZUVsLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgfVxyXG5cclxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCkge1xyXG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICB9XHJcbiAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xyXG4gIH1cclxuXHJcbiAgX2hhc0ludmFsaWRJbnB1dChpbnB1dExpc3QpIHtcclxuICAgIHJldHVybiAhaW5wdXRMaXN0LmV2ZXJ5KChpbnB1dEVsZW1lbnQpID0+IGlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCk7XHJcbiAgfVxyXG5cclxuICB0b2dnbGVCdXR0b25TdGF0ZSgpIHtcclxuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQodGhpcy5faW5wdXRFbHMpKSB7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5faW5wdXRFbHMgPSBbXHJcbiAgICAgIC4uLnRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvciksXHJcbiAgICBdO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3JcclxuICAgICk7XHJcbiAgICB0aGlzLl9pbnB1dEVscy5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XHJcbiAgICAgICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSh0aGlzLl9pbnB1dEVscyk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEZvcm1WYWxpZGF0b3I7XHJcbiIsImltcG9ydCBDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmQuanNcIjtcclxuaW1wb3J0IFwiLi4vcGFnZXMvaW5kZXguY3NzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuXHJcbmNvbnN0IGluaXRpYWxDYXJkcyA9IFtcclxuICB7XHJcbiAgICBuYW1lOiBcIllvc2VtaXQgVmFsbGV5XCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QveW9zZW1pdGUuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxha2UgTG91aXNlXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFrZS1sb3Vpc2UuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkJhbGQgTW91bnRhaW5zXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvYmFsZC1tb3VudGFpbnMuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxhdGVtYXJcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYXRlbWFyLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC92YW5vaXNlLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJMYWdvIGRpIEJyYWlzZXNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWdvLmpwZyBcIixcclxuICB9LFxyXG5dO1xyXG5cclxuLy9Qcm9maWxlIFF1ZXJpZXNcclxuY29uc3QgcHJvZmlsZUVkaXRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1lZGl0LW1vZGFsXCIpO1xyXG5jb25zdCBwcm9maWxlRWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1lZGl0LWJ1dHRvblwiKTtcclxuY29uc3QgYWRkTmV3Q2FyZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWRkLWJ1dHRvblwiKTtcclxuY29uc3QgcHJvZmlsZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGVfX25hbWVcIik7XHJcbmNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZV9fZGVzY3JpcHRpb25cIik7XHJcblxyXG4vL01vZGFsIFF1ZXJpZXNcclxuY29uc3QgcHJvZmlsZU1vZGFsRm9ybSA9IHByb2ZpbGVFZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcclxuY29uc3QgcHJvZmlsZU1vZGFsTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbW9kYWwtaW5wdXQtbmFtZVwiKTtcclxuY29uc3QgcHJvZmlsZU1vZGFsRGVzY3JpcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiI21vZGFsLWlucHV0LWRlc2NyaXB0aW9uXCJcclxuKTtcclxuY29uc3QgbmV3Q2FyZE1vZGFsVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21vZGFsLWlucHV0LXRpdGxlXCIpO1xyXG5jb25zdCBuZXdDYXJkTW9kYWxVcmwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21vZGFsLVVybFwiKTtcclxuXHJcbi8vQ2FyZCBRdWVyaWVzXHJcbmNvbnN0IGFkZE5ld0NhcmRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkLW5ldy1jYXJkXCIpO1xyXG5jb25zdCBhZGROZXdDYXJkRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkLWNhcmQtZm9ybVwiKTtcclxuY29uc3QgYWRkTmV3Q2FyZFN1Ym1pdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbmV3LWNhcmQtc3VibWl0XCIpO1xyXG5jb25zdCBjYXJkTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNfX2xpc3RcIik7XHJcblxyXG4vL1ZBTElEQVRJT05cclxuY29uc3QgY29uZmlnID0ge1xyXG4gIGZvcm1TZWxlY3RvcjogXCIubW9kYWxfX2Zvcm1cIixcclxuICBpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9faW5wdXRcIixcclxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIubW9kYWxfX2J1dHRvblwiLFxyXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX2J1dHRvbl9kaXNhYmxlZFwiLFxyXG4gIGlucHV0RXJyb3JDbGFzczogXCJtb2RhbF9faW5wdXRfdHlwZV9lcnJvclwiLFxyXG4gIGVycm9yQ2xhc3M6IFwibW9kYWxfX2Vycm9yX3Zpc2libGVcIixcclxufTtcclxuLy9TRUNUSU9OIFJFTkRFUkVSXHJcbmNvbnN0IGNhcmRTZWN0aW9uID0gbmV3IFNlY3Rpb24oXHJcbiAge1xyXG4gICAgaXRlbXM6IGluaXRpYWxDYXJkcyxcclxuICAgIHJlbmRlcmVyOiBnZW5lcmF0ZUNhcmQsXHJcbiAgfSxcclxuICBcIi5jYXJkc19fbGlzdFwiXHJcbik7XHJcbmNhcmRTZWN0aW9uLnJlbmRlckl0ZW1zKCk7XHJcblxyXG5mdW5jdGlvbiBnZW5lcmF0ZUNhcmQoaXRlbSkge1xyXG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gcmVuZGVyQ2FyZChpdGVtKTtcclxuICBjYXJkU2VjdGlvbi5hZGRJdGVtKGNhcmRFbGVtZW50LmdldENhcmQoKSk7XHJcbn1cclxuXHJcbi8vUkVOREVSIENBUkRcclxuZnVuY3Rpb24gcmVuZGVyQ2FyZChkYXRhKSB7XHJcbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKGRhdGEsIFwiI2NhcmQtdGVtcGxhdGVcIiwge1xyXG4gICAgaGFuZGxlSW1hZ2VDbGljazogKCkgPT4gaW1hZ2VQb3B1cC5vcGVuKGRhdGEpLFxyXG4gIH0pO1xyXG4gIHJldHVybiBjYXJkO1xyXG59XHJcblxyXG4vL0lNQUdFIFBPUFVQXHJcbmNvbnN0IGltYWdlUG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIjcHJldmlldy1pbWFnZS1tb2RhbFwiKTtcclxuaW1hZ2VQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLy9GT1JNIFBPUFVQXHJcblxyXG5jb25zdCBvcGVuSW1hZ2VQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4gIFwiI2FkZC1uZXctY2FyZFwiLFxyXG4gIGhhbmRsZUltYWdlRm9ybVN1Ym1pdFxyXG4pO1xyXG5jb25zdCBlZGl0UHJvZmlsZSA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4gIFwiI3Byb2ZpbGUtZWRpdC1tb2RhbFwiLFxyXG4gIGhhbmRsZUZvcm1TdWJtaXRcclxuKTtcclxuZWRpdFByb2ZpbGUuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxub3BlbkltYWdlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IGVkaXRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnLCBwcm9maWxlTW9kYWxGb3JtKTtcclxuY29uc3QgY2FyZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIGFkZE5ld0NhcmRNb2RhbCk7XHJcblxyXG5lZGl0Rm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbmNhcmRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbi8vRk9STSBTVUJNSVRcclxuZnVuY3Rpb24gaGFuZGxlRm9ybVN1Ym1pdChkYXRhKSB7XHJcbiAgY29uc29sZS5sb2coZGF0YSlcclxuICB1c2VySW5mby5zZXRVc2VySW5mbyhkYXRhKVxyXG4gIGVkaXRQcm9maWxlLmNsb3NlKCk7XHJcbn1cclxuXHJcbi8vIC8vSU1BR0UgU1VCTUlUXHJcbmZ1bmN0aW9uIGhhbmRsZUltYWdlRm9ybVN1Ym1pdCgpIHtcclxuICBjb25zdCBuYW1lID0gbmV3Q2FyZE1vZGFsVGl0bGUudmFsdWU7XHJcbiAgY29uc3QgbGluayA9IG5ld0NhcmRNb2RhbFVybC52YWx1ZTtcclxuICBnZW5lcmF0ZUNhcmQoeyBuYW1lLCBsaW5rIH0pO1xyXG4gIG9wZW5JbWFnZVBvcHVwLmNsb3NlKCk7XHJcbn1cclxuXHJcbi8vUFJPRklMRSBFRElUIFBPUFVQXHJcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKFwiLnByb2ZpbGVfX3RpdGxlXCIsIFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIpO1xyXG5cclxuLy9FRElUIFBST0ZJTEVcclxucHJvZmlsZUVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBwcm9maWxlTW9kYWxOYW1lLnZhbHVlID0gcHJvZmlsZU5hbWUudGV4dENvbnRlbnQ7XHJcbiAgcHJvZmlsZU1vZGFsRGVzY3JpcHRpb24udmFsdWUgPSBwcm9maWxlRGVzY3JpcHRpb24udGV4dENvbnRlbnQudHJpbSgpO1xyXG4gIGVkaXRQcm9maWxlLm9wZW4oKTtcclxufSk7XHJcblxyXG4vL0VWRU5UIExJU1RFTkVSU1xyXG5hZGROZXdDYXJkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgY2FyZEZvcm1WYWxpZGF0b3IudG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICBvcGVuSW1hZ2VQb3B1cC5vcGVuKCk7XHJcbn0pO1xyXG5cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgY29uc3RydWN0b3IoeyBpdGVtcywgcmVuZGVyZXIgfSwgc2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICByZW5kZXJJdGVtcygpIHtcclxuICAgIC8vIHVzZSB0aGlzLl9yZW5kZXJlciB0byBjcmVhdGUgdGhlIGVsZW1lbnRzIGZvciByZW5kZXJpbmdcclxuICAgIHRoaXMuX2l0ZW1zLmZvckVhY2godGhpcy5fcmVuZGVyZXIpO1xyXG4gICAgfVxyXG4gIFxyXG5cclxuICBhZGRJdGVtKGl0ZW0pIHtcclxuICAgIC8vIHRha2UgdGhlIGl0ZW0gYW5kIHJlbmRlciBpdCBpbnRvIHRoaXMuX2VsZW1lbnRcclxuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGl0ZW0pO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5faW1hZ2UgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW1hZ2UtcHJldmlld1wiKTtcclxuICAgIHRoaXMuX2NhcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19pbWFnZS1wcmV2aWV3LXRpdGxlXCIpO1xyXG4gIH1cclxuXHJcbiAgb3BlbihkYXRhKSB7XHJcbiAgICBzdXBlci5vcGVuKCk7XHJcbiAgICB0aGlzLl9pbWFnZS5zcmMgPSBkYXRhLmxpbms7XHJcbiAgICB0aGlzLl9pbWFnZS5hbHQgPSBgUGhvdG8gb2YgJHtkYXRhLm5hbWV9YDtcclxuICAgIHRoaXMuX2NhcHRpb24udGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJpbmZvIHtcclxuICBjb25zdHJ1Y3Rvcih1c2VyTmFtZVNlbGVjdG9yLCBqb2JTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fbmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodXNlck5hbWVTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl90aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioam9iU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICBjb25zdCBpbmZvID0ge1xyXG4gICAgICBuYW1lOiB0aGlzLl9uYW1lLnRleHRDb250ZW50LFxyXG4gICAgICB0aXRsZTogdGhpcy5fdGl0bGUudGV4dENvbnRlbnQsXHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIGluZm87XHJcbiAgICAvL3JldHVybnMgYW4gb2JqZWN0IHdpdGggaW5mbyBhYm91dCB0aGUgdXNlci5cclxuICB9XHJcblxyXG4gIHNldFVzZXJJbmZvKGRhdGEpIHtcclxuICAgIHRoaXMuX25hbWUudGV4dENvbnRlbnQgPSBkYXRhLnRpdGxlO1xyXG4gICAgdGhpcy5fdGl0bGUudGV4dENvbnRlbnQgPSBkYXRhLmRlc2NyaXB0aW9uO1xyXG4gICAgLy90YWtzZXMgYSBuZXcgdXNlciBkYXRhIGFuZCBhZGRzIGl0IG9uIHRoZSBwYWdlLlxyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiQ2FyZCIsImNvbnN0cnVjdG9yIiwiZGF0YSIsImNhcmRTZWxlY3RvciIsIl9yZWYiLCJoYW5kbGVJbWFnZUNsaWNrIiwidGhpcyIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwibGluayIsIl9jYXJkU2VsZWN0b3IiLCJfaGFuZGxlSW1hZ2VDbGljayIsIl9zZXRFdmVudExpc3RlbmVycyIsIl9jYXJkRWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJhZGRFdmVudExpc3RlbmVyIiwiX2hhbmRsZUxpa2VJY29uIiwiX2hhbmRsZURlbGV0ZUNhcmQiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJyZW1vdmUiLCJnZXRDYXJkIiwiZG9jdW1lbnQiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiX2NhcmRJbWFnZSIsInN0eWxlIiwiYmFja2dyb3VuZEltYWdlIiwidGV4dENvbnRlbnQiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJfcG9wdXBFbGVtZW50IiwiX3BvcHVwQ2xvc2UiLCJvcGVuIiwiYWRkIiwiX2Nsb3NlTW9kYWxFc2NhcGUiLCJjbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJldnQiLCJrZXkiLCJzZXRFdmVudExpc3RlbmVycyIsInRhcmdldCIsImNvbnRhaW5zIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZUZvcm1TdWJtaXQiLCJzdXBlciIsIl9wb3B1cEZvcm0iLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9nZXRJbnB1dFZhbHVlcyIsImlucHV0TGlzdCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiaW5wdXQiLCJ2YWx1ZSIsInJlc2V0IiwiY29uZmlnIiwiZm9ybUVsZW1lbnQiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfZm9ybUVsZW1lbnQiLCJfc2hvd0lucHV0RXJyb3IiLCJpbnB1dEVsZW1lbnQiLCJlcnJvck1lc3NhZ2VFbCIsImlkIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfaGlkZUlucHV0RXJyb3IiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oYXNJbnZhbGlkSW5wdXQiLCJldmVyeSIsInRvZ2dsZUJ1dHRvblN0YXRlIiwiX2lucHV0RWxzIiwiX3N1Ym1pdEJ1dHRvbiIsImRpc2FibGVkIiwiZW5hYmxlVmFsaWRhdGlvbiIsInByZXZlbnREZWZhdWx0IiwicHJvZmlsZUVkaXRNb2RhbCIsInByb2ZpbGVFZGl0QnV0dG9uIiwiYWRkTmV3Q2FyZEJ1dHRvbiIsInByb2ZpbGVOYW1lIiwicHJvZmlsZURlc2NyaXB0aW9uIiwicHJvZmlsZU1vZGFsRm9ybSIsInByb2ZpbGVNb2RhbE5hbWUiLCJwcm9maWxlTW9kYWxEZXNjcmlwdGlvbiIsIm5ld0NhcmRNb2RhbFRpdGxlIiwibmV3Q2FyZE1vZGFsVXJsIiwiYWRkTmV3Q2FyZE1vZGFsIiwiZm9ybVNlbGVjdG9yIiwiY2FyZFNlY3Rpb24iLCJzZWxlY3RvciIsIml0ZW1zIiwicmVuZGVyZXIiLCJfaXRlbXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwicmVuZGVySXRlbXMiLCJhZGRJdGVtIiwiaXRlbSIsInByZXBlbmQiLCJnZW5lcmF0ZUNhcmQiLCJjYXJkRWxlbWVudCIsImltYWdlUG9wdXAiLCJfaW1hZ2UiLCJfY2FwdGlvbiIsInNyYyIsImFsdCIsIm9wZW5JbWFnZVBvcHVwIiwiZWRpdFByb2ZpbGUiLCJjb25zb2xlIiwibG9nIiwidXNlckluZm8iLCJzZXRVc2VySW5mbyIsImVkaXRGb3JtVmFsaWRhdG9yIiwiRm9ybVZhbGlkYXRvciIsImNhcmRGb3JtVmFsaWRhdG9yIiwidXNlck5hbWVTZWxlY3RvciIsImpvYlNlbGVjdG9yIiwiX3RpdGxlIiwiZ2V0VXNlckluZm8iLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwidHJpbSJdLCJzb3VyY2VSb290IjoiIn0=