!function(){"use strict";class e{constructor(e,t,s){let{handleImageClick:r,handleDeleteClick:i}=s;this._name=e.name,this._link=e.link,this.id=e._id,this._cardSelector=t,this._handleImageClick=r,this._handleDeleteClick=i}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>this._handleLikeIcon())),this._cardElement.querySelector(".card__button-delete").addEventListener("click",(()=>this._handleDeleteClick(this)))}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}removeCard(){this._cardElement.remove()}getCard(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardImage.style.backgroundImage=`url(${this._link})`,this._cardElement.querySelector(".card__title").textContent=this._name,this._cardImage.addEventListener("click",this._handleImageClick),this._setEventListeners(),this._cardElement}}class t{constructor(e){this._popupElement=document.querySelector(e),this._popupClose=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._closeModalEscape)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._closeModalEscape)}_closeModalEscape=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}class s extends t{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._popupSubmit=this._popupElement.querySelector(".modal__button")}_getInputValues(){const e=this._popupForm.querySelectorAll(".modal__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setSubmitText(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._popupSubmit.textContent=e?t:"Save"}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(()=>{this._handleFormSubmit(this._getInputValues())}))}close(){this._popupForm.reset(),super.close()}}var r=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}toggleButtonState(){if(this._hasInvalidInput(this._inputEls))return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputEls=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState(this._inputEls)}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};const i=document.querySelector("#profile-edit-modal"),n=document.querySelector("#profile-edit-button"),o=document.querySelector(".profile__add-button"),a=document.querySelector("#profile__name"),l=document.querySelector("#profile__description"),c=document.querySelector(".profile__image-button"),d=document.querySelector("#profile__image-edit"),u=document.querySelector("#modal-input-url"),h=document.querySelector(".profile__image"),_=i.querySelector(".modal__form"),m=document.querySelector("#modal-input-name"),p=document.querySelector("#modal-input-description"),v=(document.querySelector("#modal-input-title"),document.querySelector("#modal-Url"),document.querySelector("#add-new-card")),S=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s,this._authorization=s.authorization,this._contentType=s["Content-Type"]}_checkResponseOk(e){if(e.ok)return e.json();Promise.reject(`Erorr: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponseOk)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponseOk)}profileUpdate(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",body:JSON.stringify({name:e.title,about:e.about}),headers:this._headers}).then(this._checkResponseOk)}addCard(e,t){return fetch(`${this._baseUrl}/cards`,{method:"POST",body:JSON.stringify({name:e,link:t}),headers:this._headers}).then(this._checkResponseOk)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponseOk)}cardLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponseOk)}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponseOk)}updateProfileAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponseOk)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"5f2b588a-250e-4922-b74a-306ecb82bfe6","Content-Type":"application/json"}}),E={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},b=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){console.log("CARDS",e),e.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}({renderer:f},".cards__list");function f(t){const s=new e(r=t,"#card-template",{handleImageClick:()=>y.open(r),handleDeleteClick:k});var r;b.addItem(s.getCard())}const y=new class extends t{constructor(e){super(e),this._image=this._popupElement.querySelector(".modal__image-preview"),this._caption=document.querySelector(".modal__image-preview-title")}open(e){super.open(),this._image.src=e.link,this._image.alt=`Photo of ${e.name}`,this._caption.textContent=e.name}}("#preview-image-modal");y.setEventListeners();const g=new class extends t{constructor(e){super(e),this._popupConfirm=this._popupElement.querySelector(".modal__form"),this._popupSubmit=this._popupElement.querySelector(".modal__button-delete")}setSubmitAction(e){this._handleFormSubmit=e}setSubmitText(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._popupSubmit.textContent=e?t:"Yes"}setEventListeners(){this._popupConfirm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()})),super.setEventListeners()}}("#card__delete-modal");function k(e){g.open(),g.setSubmitAction((()=>{g.setSubmitText(!0,"Deleting..."),cardFormValidatornew,S.deleteCard(e.id).then((()=>{g.setSubmitText(!0,"Deleted..."),g.close(),e.removeCard()})).catch((e=>console.log(e))).finally((()=>g.setSubmitText(!1)))}))}g.setEventListeners();const C=new s("#add-new-card",(function(e){const t=e.name,s=e.link;C.setSubmitText(!0,"Saving..."),S.addCard(t,s).then((e=>{f(e),C.setSubmitText(!1),C.close()})).catch((e=>{console.log(e)}))})),L=new s("#profile-edit-modal",(function(e){L.setSubmitText(!0,"Saving..."),S.profileUpdate(e).then((()=>{U.setUserInfo(e),L.setSubmitText(!1),L.close()})).catch((e=>{console.log(e)}))})),q=new s("#profile__image-edit",(function(){const e=u.value;S.updateProfileAvatar(e).then((()=>{h.src=e,q.close()})).catch((e=>{console.log(e)}))}));L.setEventListeners(),q.setEventListeners(),C.setEventListeners();const I=new r(E,_),x=new r(E,d),w=new r(E,v);I.enableValidation(),x.enableValidation(),w.enableValidation();const U=new class{constructor(e,t,s){this._name=document.querySelector(e),this._title=document.querySelector(t),this._userAvatar=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,title:this._title.textContent}}setUserInfo(e){this._name.textContent=e.title,this._title.textContent=e.about,e.avatar&&(this._userAvatar.src=e.avatar)}}(".profile__title",".profile__description",".profile__image");n.addEventListener("click",(()=>{m.value=a.textContent,p.value=l.textContent.trim(),L.open()})),o.addEventListener("click",(()=>{w.toggleButtonState(),C.open()})),c.addEventListener("click",(()=>{q.open()})),Promise.all([S.getUserInfo(),S.getInitialCards()]).then((e=>{let[t,s]=e;U.setUserInfo({about:t.about,title:t.name,avatar:t.avatar}),b.renderItems(s)})).catch((e=>{console.log(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,